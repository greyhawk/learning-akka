/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.example;

import akka.actor.ActorRef;
import akka.actor.ActorSystem;
import com.example.actors.PrintMyActorRefActor;
import com.example.actors.StartStopActor1;
import com.example.actors.SupervisingActor;

import java.io.IOException;

/**
 * App
 * @author ging wu
 * @date 2018/12/11
 */
public class App {
    public static void main(String[] args) throws IOException {
//        runPrintMyActorRefActor();
//        runStartActor1();
        runSupervisingActor();
    }

    private static void runPrintMyActorRefActor() throws IOException {

        ActorSystem system = ActorSystem.create("testSystem");

        ActorRef firstRef = system.actorOf(PrintMyActorRefActor.props(), "first-actor");
        System.out.println("First: " + firstRef);
        firstRef.tell("printit", ActorRef.noSender());

        System.out.println(">>> Press ENTER to exit <<<");
        try {
            System.in.read();
        } finally {
            system.terminate();
        }

    }

    private static void runStartActor1() throws IOException {
        ActorSystem system = ActorSystem.create("hello-world-system");

        ActorRef firstRef = system.actorOf(StartStopActor1.props(), "first");
        firstRef.tell("stop", ActorRef.noSender());
        try {
            System.in.read();
        } finally {
            system.terminate();
        }
    }

    private static void runSupervisingActor() throws IOException {
        ActorSystem system = ActorSystem.create("hello-world-system");
        ActorRef supervisingActor = system.actorOf(SupervisingActor.props(), "supervising-actor");
        supervisingActor.tell("failChild", ActorRef.noSender());
        try {
            System.in.read();
        } finally {
            system.terminate();
        }
    }
}
